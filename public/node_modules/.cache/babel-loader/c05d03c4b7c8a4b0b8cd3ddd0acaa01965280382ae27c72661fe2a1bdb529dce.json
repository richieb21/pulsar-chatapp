{"ast":null,"code":"var _jsxFileName = \"/Users/richardbai/Documents/GitHub/pulsar-chatapp/public/src/pages/SetAvatar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport loader from '../assets/loader.gif';\nimport { toast, ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from 'axios';\nimport { registerRoute, setAvatarRoute } from '../utils/APIRoutes';\nimport multiavatar from '@multiavatar/multiavatar';\nimport { Buffer } from 'buffer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SetAvatar() {\n  _s();\n  const api = `https://api.multiavatar.com/4645646`;\n  const apiKey = '1s39KFwH7A8cqR';\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n  const setProfilePicture = async () => {};\n  useEffect(() => {\n    // Immediately invoked async function within useEffect\n    (async () => {\n      const data = [];\n      try {\n        for (let i = 0; i < 4; i++) {\n          data.push(multiavatar(Math.round(Math.random() * 10000)));\n        }\n        setAvatars(data);\n      } catch (error) {\n        console.error(\"Failed to fetch avatars:\", error);\n        // Optionally use toast to notify about the error\n        toast.error(\"Failed to load avatars. Please try again later.\", toastOptions);\n      }\n      setIsLoading(false);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Set your Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: avatars.map((avatar, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${avatar}`,\n              alt: \"avatar\",\n              onClick: () => setSelectedAvatar(index)\n            }, avatar, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(SetAvatar, \"Vf3bLGWNS+p8++1hLS4MtcrCzCs=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nconst Container = styled.div`\n    display: flex;\n`;\n_c2 = Container;\nexport default SetAvatar;\nvar _c, _c2;\n$RefreshReg$(_c, \"SetAvatar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","loader","toast","ToastContainer","axios","registerRoute","setAvatarRoute","multiavatar","Buffer","jsxDEV","_jsxDEV","Fragment","_Fragment","SetAvatar","_s","api","apiKey","navigate","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","toastOptions","position","autoClose","pauseOnHover","draggable","theme","setProfilePicture","data","i","push","Math","round","random","error","console","children","Container","className","fileName","_jsxFileName","lineNumber","columnNumber","map","avatar","index","src","alt","onClick","_c","div","_c2","$RefreshReg$"],"sources":["/Users/richardbai/Documents/GitHub/pulsar-chatapp/public/src/pages/SetAvatar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport loader from '../assets/loader.gif';\nimport { toast, ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport axios from 'axios';\nimport { registerRoute, setAvatarRoute } from '../utils/APIRoutes';\nimport multiavatar from '@multiavatar/multiavatar';\nimport { Buffer } from 'buffer';\n\n\nfunction SetAvatar() {\n\n  const api = `https://api.multiavatar.com/4645646`;\n  const apiKey = '1s39KFwH7A8cqR';\n  const navigate = useNavigate();\n\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\",\n  };\n\n  const setProfilePicture = async () => {\n\n  }\n\n  useEffect(() => {\n    // Immediately invoked async function within useEffect\n    (async () => {\n      const data = [];\n      try {\n        for (let i = 0; i < 4; i++) {\n          data.push(multiavatar(Math.round(Math.random() * 10000)));\n        }\n        setAvatars(data);\n      } catch (error) {\n        console.error(\"Failed to fetch avatars:\", error);\n        // Optionally use toast to notify about the error\n        toast.error(\"Failed to load avatars. Please try again later.\", toastOptions);\n      }\n      setIsLoading(false);\n    })();\n  }, []);\n\n  return (\n    <>\n        <Container>\n            <div className='title-container'>\n                <h1>Set your Avatar</h1>\n            </div>\n            <div className='avatars'>\n                {avatars.map((avatar, index) => {\n                    return (\n                        <div key={index} className={`avatar ${selectedAvatar === index ? \"selected\" : \"\"}`}>\n                            <img src={`data:image/svg+xml;base64,${avatar}`} \n                                 alt=\"avatar\" \n                                 key={avatar}\n                                 onClick={() => setSelectedAvatar(index)}/>\n                        </div>\n                    )\n                })}\n            </div>\n            <ToastContainer/>\n        </Container>\n    </>\n  )\n}\n\nconst Container = styled.div`\n    display: flex;\n`\n\nexport default SetAvatar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}