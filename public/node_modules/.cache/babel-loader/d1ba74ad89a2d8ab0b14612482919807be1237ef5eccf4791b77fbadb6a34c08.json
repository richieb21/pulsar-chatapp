{"ast":null,"code":"var _jsxFileName = \"/Users/richardbai/Documents/GitHub/pulsar-chatapp/public/src/pages/SetAvatar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { toast, ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport multiavatar from '@multiavatar/multiavatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SetAvatar() {\n  _s();\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n  function setProfilePicture() {}\n  useEffect(() => {\n    (async () => {\n      const data = [];\n      try {\n        for (let i = 0; i < 4; i++) {\n          const svg = multiavatar(Math.round(Math.random() * 10000));\n          data.push(svg);\n        }\n        setAvatars(data);\n      } catch (error) {\n        console.error(\"Failed to fetch avatars:\", error);\n        toast.error(\"Failed to load avatars. Please try again later.\", toastOptions);\n      }\n      setIsLoading(false);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Set your Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: avatars.map((avatar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"}`,\n          onClick: () => setSelectedAvatar(index),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: avatar\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: setProfilePicture,\n        children: \"Set as Profile Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SetAvatar, \"Vf3bLGWNS+p8++1hLS4MtcrCzCs=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 3rem;\n  background-color: #131324;\n  height: 100vh;\n  width: 100vw;\n  .loader {\n    max-inline-size: 100%;\n  }\n\n  .title-container {\n    h1 {\n        color: white;\n    }\n  }\n\n  .avatars {\n    display: flex;\n    gap: 2rem;\n    .avatar {\n        border: 0.4rem solid transparent;\n        padding: 0.4rem;\n        border-radius: 5rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        transition: ease-in-out 0.5s;\n        svg {\n            width: 6rem;\n            height: 6rem;\n        }\n    }\n    .selected {\n        border: 0.4rem solid #4e0eff;\n    }\n  }\n  .submit-btn {\n    background-color: #997af0;\n    color: white;\n    padding: 1rem 2rem;\n    border: none;\n    font-weight: bold;\n    cursor: pointer;\n    border-radius: 0.4rem;\n    font-size: 1rem;\n    text-transform: uppercase;\n    transition: ease-in-out 0.5s;\n    &:hover {\n        background-color: #4e0eff;\n    }\n  }\n`;\n_c2 = Container;\nexport default SetAvatar;\nvar _c, _c2;\n$RefreshReg$(_c, \"SetAvatar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","toast","ToastContainer","multiavatar","jsxDEV","_jsxDEV","Fragment","_Fragment","SetAvatar","_s","navigate","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","toastOptions","position","autoClose","pauseOnHover","draggable","theme","setProfilePicture","data","i","svg","Math","round","random","push","error","console","children","Container","className","fileName","_jsxFileName","lineNumber","columnNumber","map","avatar","index","onClick","dangerouslySetInnerHTML","__html","_c","div","_c2","$RefreshReg$"],"sources":["/Users/richardbai/Documents/GitHub/pulsar-chatapp/public/src/pages/SetAvatar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { toast, ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport multiavatar from '@multiavatar/multiavatar';\n\nfunction SetAvatar() {\n  const navigate = useNavigate();\n\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\",\n  };\n\n  function setProfilePicture() {\n    \n  }\n\n  useEffect(() => {\n    (async () => {\n      const data = [];\n      try {\n        for (let i = 0; i < 4; i++) {\n          const svg = multiavatar(Math.round(Math.random() * 10000));\n          data.push(svg);\n        }\n        setAvatars(data);\n      } catch (error) {\n        console.error(\"Failed to fetch avatars:\", error);\n        toast.error(\"Failed to load avatars. Please try again later.\", toastOptions);\n      }\n      setIsLoading(false);\n    })();\n  }, []);\n\n\n  return (\n    <>\n      <Container>\n        <div className='title-container'>\n          <h1>Set your Avatar</h1>\n        </div>\n        <div className='avatars'>\n          {avatars.map((avatar, index) => (\n            <div key={index} \n                 className={`avatar ${selectedAvatar === index ? \"selected\" : \"\"}`}\n                 onClick={() => setSelectedAvatar(index)}>\n              <div dangerouslySetInnerHTML={{ __html: avatar }} />\n            </div>\n          ))}\n        </div>\n        <button className='submit-btn' onClick={setProfilePicture}>Set as Profile Picture</button>\n        <ToastContainer/>\n      </Container>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 3rem;\n  background-color: #131324;\n  height: 100vh;\n  width: 100vw;\n  .loader {\n    max-inline-size: 100%;\n  }\n\n  .title-container {\n    h1 {\n        color: white;\n    }\n  }\n\n  .avatars {\n    display: flex;\n    gap: 2rem;\n    .avatar {\n        border: 0.4rem solid transparent;\n        padding: 0.4rem;\n        border-radius: 5rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        transition: ease-in-out 0.5s;\n        svg {\n            width: 6rem;\n            height: 6rem;\n        }\n    }\n    .selected {\n        border: 0.4rem solid #4e0eff;\n    }\n  }\n  .submit-btn {\n    background-color: #997af0;\n    color: white;\n    padding: 1rem 2rem;\n    border: none;\n    font-weight: bold;\n    cursor: pointer;\n    border-radius: 0.4rem;\n    font-size: 1rem;\n    text-transform: uppercase;\n    transition: ease-in-out 0.5s;\n    &:hover {\n        background-color: #4e0eff;\n    }\n  }\n`;\n\nexport default SetAvatar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}